/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

import React from "react";
import * as RadixRadioGroup from "@radix-ui/react-radio-group";
import "./styles.scss";

export interface RadioOption {
  value: string;
  label: string;
}

export interface RadioGroupProps {
  options: RadioOption[];
  value?: string;
  defaultValue?: string;
  onValueChange?: (value: string) => void;
  variant?: "highlight" | "accent" | "danger";
  size?: "small" | "standard" | "large";
  labelPosition?: "after" | "before";
}

const RadioGroup: React.FC<RadioGroupProps> = ({
  options,
  value,
  defaultValue,
  onValueChange,
  variant,
  size = "standard",
  labelPosition = "after",
}) => {
  return (
    <div className="radio-group-container">
      <RadixRadioGroup.Root
        value={value}
        defaultValue={defaultValue}
        onValueChange={onValueChange}
        aria-label="Opções do RadioGroup"
        className="radio-group-root"
      >
        {options.map(({ value: optionValue, label }) => (
          <div
            key={optionValue}
            className={`radio-group-item-container ${
              labelPosition === "before" ? "label-before" : ""
            }`}
          >
            <RadixRadioGroup.Item
              className={`radio-group-item ${variant ? variant : ""} ${size}`}
              value={optionValue}
              id={`radio-${optionValue}`}
            >
              <RadixRadioGroup.Indicator
                className={`radio-group-indicator ${size}`}
              />
            </RadixRadioGroup.Item>
            <label
              className="radio-group-label"
              htmlFor={`radio-${optionValue}`}
            >
              {label}
            </label>
          </div>
        ))}
      </RadixRadioGroup.Root>
    </div>
  );
};

export default RadioGroup;


// Variáveis MD3 (substitua ou sobrescreva conforme sua configuração)
:root {
  --md-sys-color-primary: #6750a4;
  --md-sys-color-outline: #79747e;
  --md-sys-color-on-surface: #1c1b1f;
}

// Container do RadioGroup (removido &.horizontal)
.radio-group-container {
  display: flex;
  flex-direction: column;
  // gap: 12px;
  box-sizing: border-box;   // Adicionado para incluir padding e borda no tamanho total
  padding: 2px !important;             // Garante 2px entre a borda e o conteúdo
}

// O Root também pode ser usado para alinhar itens se necessário
.radio-group-root {
  display: flex;
  flex-direction: inherit;
  gap: 12px;
}

// Container individual para cada opção
.radio-group-item-container {
  display: flex;
  align-items: center;
}

// Estilos para o item do radio seguindo MD3
.radio-group-item {
  appearance: none;
  width: 20px;
  height: 20px;
  border: 2px solid var(--md-sys-color-outline);
  border-radius: 50%;
  background-color: transparent;
  position: relative;
  transition: border-color 0.2s ease;
  cursor: pointer;

  // Hover e Focus para feedback
  &:hover {
    border-color: var(--md-sys-color-primary);
  }

  &:focus {
    outline: none;
    // box-shadow: 0 0 0 2px rgba(103, 80, 164, 0.3);
  }
}

// Indicador interno que aparece quando selecionado
.radio-group-indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--md-sys-color-primary);
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.2s ease;
}

// Ativando o indicador quando o radio está selecionado (usando data-state do Radix)
.radio-group-item[data-state="checked"] .radio-group-indicator {
  transform: translate(-50%, -50%) scale(1);
}

// Estilo para o label
.radio-group-label {
  font-size: 1rem;
  color: var(--md-sys-color-on-surface);
  margin-left: 8px;
  cursor: pointer;
}

// Variants
.radio-group-item.highlight {
  border-color: #ffeb3b; // Ajuste conforme necessário
}

.radio-group-item.accent {
  border-color: #03a9f4;
}

.radio-group-item.danger {
  border-color: #f44336;
}

// Variants for radio-group-indicator
.radio-group-item.highlight .radio-group-indicator {
  background-color: #ffeb3b;
}

.radio-group-item.accent .radio-group-indicator {
  background-color: #03a9f4;
}

.radio-group-item.danger .radio-group-indicator {
  background-color: #f44336;
}

// Estilos para hover por variant
// .radio-group-item.highlight:hover { border-color: #ffd54f; }
// .radio-group-item.accent:hover { border-color: #4fc3f7; }
// .radio-group-item.danger:hover { border-color: #e57373; }

// Novos estilos de hover com background-color por variant
.radio-group-item.highlight:hover {
  background-color: rgba(255, 235, 59, 0.2); // hover para highlight
}

.radio-group-item.accent:hover {
  background-color: rgba(3, 169, 244, 0.2); // hover para accent
}

.radio-group-item.danger:hover {
  background-color: rgba(244, 67, 54, 0.2); // hover para danger
}

// Sizes
.radio-group-item.small {
  width: 16px;
  height: 16px;
}

.radio-group-item.large {
  width: 24px;
  height: 24px;
}

.radio-group-indicator.small {
  width: 8px;
  height: 8px;
}

.radio-group-indicator.large {
  width: 16px;
  height: 16px;
}

// Label position
.radio-group-item-container.label-before {
  flex-direction: row-reverse;
}

.radio-group-item-container.label-before .radio-group-label {
  margin-left: 0;
  margin-right: 8px;
}
